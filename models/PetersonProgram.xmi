<?xml version="1.0" encoding="UTF-8"?>
<dinkiemodel:Program
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:dinkiemodel="http://www.example.org/dinkiemodel"
    xsi:schemaLocation="http://www.example.org/dinkiemodel ../metamodels/dinkie/dinkiemodel.ecore">
  <mainFunc>
    <statements
        xsi:type="dinkiemodel:Declaration"
        global="true"
        varName="account">
      <type/>
      <expression
          xsi:type="dinkiemodel:Number"
          value="100"/>
    </statements>
    <statements
        xsi:type="dinkiemodel:Declaration"
        global="true"
        varName="flag_a">
      <type
          type="BOOL"/>
      <expression
          xsi:type="dinkiemodel:BoolVal"/>
    </statements>
    <statements
        xsi:type="dinkiemodel:Declaration"
        global="true"
        varName="flag_b">
      <type
          type="BOOL"/>
      <expression
          xsi:type="dinkiemodel:BoolVal"/>
    </statements>
    <statements
        xsi:type="dinkiemodel:Declaration"
        global="true"
        varName="turn">
      <type/>
    </statements>
    <statements
        xsi:type="dinkiemodel:Parallel"
        nrOfThreads="3">
      <statements
          xsi:type="dinkiemodel:IfOne">
        <expression
            xsi:type="dinkiemodel:TwoOperator"
            operator="NOT_EQUAL">
          <leftExpr
              xsi:type="dinkiemodel:ThreadID"/>
          <rightExpr
              xsi:type="dinkiemodel:Number"/>
        </expression>
        <statements
            xsi:type="dinkiemodel:IfTwo">
          <thenStats
              xsi:type="dinkiemodel:Assign"
              varName="flag_a">
            <expression
                xsi:type="dinkiemodel:BoolVal"
                value="true"/>
          </thenStats>
          <thenStats
              xsi:type="dinkiemodel:Assign"
              varName="turn">
            <expression
                xsi:type="dinkiemodel:Number"
                value="1"/>
          </thenStats>
          <thenStats
              xsi:type="dinkiemodel:While">
            <expression
                xsi:type="dinkiemodel:TwoOperator"
                operator="AND">
              <leftExpr
                  xsi:type="dinkiemodel:TwoOperator"
                  operator="EQUAL">
                <leftExpr
                    xsi:type="dinkiemodel:VariableExpr"
                    name="flag_b"/>
                <rightExpr
                    xsi:type="dinkiemodel:BoolVal"
                    value="true"/>
              </leftExpr>
              <rightExpr
                  xsi:type="dinkiemodel:TwoOperator"
                  operator="EQUAL">
                <leftExpr
                    xsi:type="dinkiemodel:VariableExpr"
                    name="turn"/>
                <rightExpr
                    xsi:type="dinkiemodel:Number"
                    value="1"/>
              </rightExpr>
            </expression>
          </thenStats>
          <thenStats
              xsi:type="dinkiemodel:Assign"
              varName="account">
            <expression
                xsi:type="dinkiemodel:TwoOperator"
                operator="PLUS">
              <leftExpr
                  xsi:type="dinkiemodel:VariableExpr"
                  name="account"/>
              <rightExpr
                  xsi:type="dinkiemodel:Number"
                  value="50"/>
            </expression>
          </thenStats>
          <thenStats
              xsi:type="dinkiemodel:Assign"
              varName="flag_a">
            <expression
                xsi:type="dinkiemodel:BoolVal"/>
          </thenStats>
          <expression
              xsi:type="dinkiemodel:TwoOperator"
              operator="EQUAL">
            <leftExpr
                xsi:type="dinkiemodel:ThreadID"/>
            <rightExpr
                xsi:type="dinkiemodel:Number"
                value="1"/>
          </expression>
          <elseStats
              xsi:type="dinkiemodel:Assign"
              varName="flag_b">
            <expression
                xsi:type="dinkiemodel:BoolVal"
                value="true"/>
          </elseStats>
          <elseStats
              xsi:type="dinkiemodel:Assign"
              varName="turn">
            <expression
                xsi:type="dinkiemodel:Number"
                value="2"/>
          </elseStats>
          <elseStats
              xsi:type="dinkiemodel:While">
            <expression
                xsi:type="dinkiemodel:TwoOperator"
                operator="AND">
              <leftExpr
                  xsi:type="dinkiemodel:TwoOperator"
                  operator="EQUAL">
                <leftExpr
                    xsi:type="dinkiemodel:VariableExpr"
                    name="flag_a"/>
                <rightExpr
                    xsi:type="dinkiemodel:BoolVal"
                    value="true"/>
              </leftExpr>
              <rightExpr
                  xsi:type="dinkiemodel:TwoOperator"
                  operator="EQUAL">
                <leftExpr
                    xsi:type="dinkiemodel:VariableExpr"
                    name="turn"/>
                <rightExpr
                    xsi:type="dinkiemodel:Number"
                    value="2"/>
              </rightExpr>
            </expression>
          </elseStats>
          <elseStats
              xsi:type="dinkiemodel:Assign"
              varName="account">
            <expression
                xsi:type="dinkiemodel:TwoOperator"
                operator="PLUS">
              <leftExpr
                  xsi:type="dinkiemodel:VariableExpr"
                  name="account"/>
              <rightExpr
                  xsi:type="dinkiemodel:Number"
                  value="50"/>
            </expression>
          </elseStats>
          <elseStats
              xsi:type="dinkiemodel:Assign"
              varName="flag_b">
            <expression
                xsi:type="dinkiemodel:BoolVal"/>
          </elseStats>
        </statements>
      </statements>
    </statements>
    <statements
        xsi:type="dinkiemodel:WriteStatement">
      <type
          xsi:type="dinkiemodel:BaseType"/>
      <expression
          xsi:type="dinkiemodel:VariableExpr"
          name="account"/>
    </statements>
    <statements
        xsi:type="dinkiemodel:WriteStatement">
      <type
          xsi:type="dinkiemodel:BaseType"
          type="CHAR"/>
      <expression
          xsi:type="dinkiemodel:Character"
          value="\n"/>
    </statements>
  </mainFunc>
</dinkiemodel:Program>
