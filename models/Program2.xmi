<?xml version="1.0" encoding="UTF-8"?>
<dinkiemodel:Program
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:dinkiemodel="http://www.example.org/dinkiemodel"
    xsi:schemaLocation="http://www.example.org/dinkiemodel dinkiemodel.ecore">
  <functions
      name="sum">
    <statements
        xsi:type="dinkiemodel:Declaration"
        varName="res">
      <type/>
      <expression
          xsi:type="dinkiemodel:Number"/>
    </statements>
    <statements
        xsi:type="dinkiemodel:Declaration"
        varName="i">
      <type/>
      <expression
          xsi:type="dinkiemodel:Number"/>
    </statements>
    <statements
        xsi:type="dinkiemodel:While">
      <expression
          xsi:type="dinkiemodel:TwoOperator"
          operator="LT">
        <leftExpr
            xsi:type="dinkiemodel:VariableExpr"
            name="i"/>
        <rightExpr
            xsi:type="dinkiemodel:VariableExpr"
            name="array"/>
      </expression>
      <statements
          xsi:type="dinkiemodel:Assign"
          varName="res">
        <expression
            xsi:type="dinkiemodel:TwoOperator"
            operator="PLUS">
          <leftExpr
              xsi:type="dinkiemodel:VariableExpr"
              name="res"/>
          <rightExpr
              xsi:type="dinkiemodel:VariableExpr"
              name="array"/>
        </expression>
      </statements>
      <statements
          xsi:type="dinkiemodel:Assign"
          varName="i">
        <expression
            xsi:type="dinkiemodel:TwoOperator"
            operator="PLUS">
          <leftExpr
              xsi:type="dinkiemodel:VariableExpr"
              name="i"/>
          <rightExpr
              xsi:type="dinkiemodel:Number"
              value="1"/>
        </expression>
      </statements>
    </statements>
    <statements
        xsi:type="dinkiemodel:Return">
      <expression
          xsi:type="dinkiemodel:VariableExpr"
          name="res"/>
    </statements>
    <arguments
        name="array">
      <type
          xsi:type="dinkiemodel:ArrayType"/>
    </arguments>
    <type xsi:type="dinkiemodel:BaseType"/>
  </functions>
  <functions
      name="some_are_true">
    <statements
        xsi:type="dinkiemodel:Declaration"
        varName="i">
      <type/>
      <expression
          xsi:type="dinkiemodel:Number"/>
    </statements>
    <statements
        xsi:type="dinkiemodel:While">
      <expression
          xsi:type="dinkiemodel:TwoOperator"
          operator="LT">
        <leftExpr
            xsi:type="dinkiemodel:VariableExpr"
            name="i"/>
        <rightExpr
            xsi:type="dinkiemodel:VariableExpr"
            name="array"/>
      </expression>
      <statements
          xsi:type="dinkiemodel:IfOne">
        <expression
            xsi:type="dinkiemodel:ArrayExpr"
            varName="array">
          <index
              xsi:type="dinkiemodel:VariableExpr"
              name="i"/>
        </expression>
        <statements
            xsi:type="dinkiemodel:Return">
          <expression
              xsi:type="dinkiemodel:Boolean"
              value="true"/>
        </statements>
      </statements>
      <statements
          xsi:type="dinkiemodel:Assign"
          varName="i">
        <expression
            xsi:type="dinkiemodel:TwoOperator"
            operator="PLUS">
          <leftExpr
              xsi:type="dinkiemodel:VariableExpr"
              name="i"/>
          <rightExpr
              xsi:type="dinkiemodel:Number"
              value="1"/>
        </expression>
      </statements>
    </statements>
    <statements
        xsi:type="dinkiemodel:Return">
      <expression
          xsi:type="dinkiemodel:Boolean"/>
    </statements>
    <arguments
        name="array">
      <type
          xsi:type="dinkiemodel:ArrayType"
          arrayType="BOOL"/>
    </arguments>
    <type xsi:type="dinkiemodel:BaseType"
        type="BOOL"/>
  </functions>
  <main>
    <statements
        xsi:type="dinkiemodel:Declaration"
        global="true"
        varName="lock">
      <type/>
    </statements>
    <statements
        xsi:type="dinkiemodel:FilledArrayDecl"
        varName="nrs">
      <arraytype/>
      <expression
          xsi:type="dinkiemodel:Number"
          value="1"/>
      <expression
          xsi:type="dinkiemodel:Number"
          value="2"/>
      <expression
          xsi:type="dinkiemodel:Number"
          value="3"/>
      <expression
          xsi:type="dinkiemodel:Number"
          value="4"/>
      <expression
          xsi:type="dinkiemodel:Number"
          value="5"/>
      <expression
          xsi:type="dinkiemodel:Number"
          value="6"/>
      <expression
          xsi:type="dinkiemodel:Number"
          value="7"/>
    </statements>
    <statements
        xsi:type="dinkiemodel:FilledArrayDecl"
        varName="bools">
      <arraytype
          arrayType="BOOL"/>
      <expression
          xsi:type="dinkiemodel:Boolean"
          value="true"/>
      <expression
          xsi:type="dinkiemodel:Boolean"
          value="true"/>
      <expression
          xsi:type="dinkiemodel:Boolean"/>
      <expression
          xsi:type="dinkiemodel:Boolean"
          value="true"/>
      <expression
          xsi:type="dinkiemodel:Boolean"/>
      <expression
          xsi:type="dinkiemodel:Boolean"
          value="true"/>
    </statements>
    <statements
        xsi:type="dinkiemodel:Parallel"
        nrOfThreads="2">
      <statements
          xsi:type="dinkiemodel:IfTwo">
        <thenStats
            xsi:type="dinkiemodel:Sync"
            varName="lock">
          <statements
              xsi:type="dinkiemodel:StringArrayDecl"
              varName="str"
              content="The sum is: "/>
          <statements
              xsi:type="dinkiemodel:WriteStatement">
            <type
                xsi:type="dinkiemodel:ArrayType"
                arrayType="CHAR"/>
            <expression
                xsi:type="dinkiemodel:VariableExpr"
                name="str"/>
          </statements>
          <statements
              xsi:type="dinkiemodel:WriteStatement">
            <type
                xsi:type="dinkiemodel:BaseType"/>
            <expression
                xsi:type="dinkiemodel:FuncExpr"
                funcName="sum">
              <arguments
                  xsi:type="dinkiemodel:VariableExpr"
                  name="nrs"/>
            </expression>
          </statements>
          <statements
              xsi:type="dinkiemodel:WriteStatement">
            <type
                xsi:type="dinkiemodel:BaseType"/>
            <expression
                xsi:type="dinkiemodel:Character"
                value="10"/>
          </statements>
        </thenStats>
        <expression
            xsi:type="dinkiemodel:TwoOperator"
            operator="EQUAL">
          <leftExpr
              xsi:type="dinkiemodel:ThreadID"/>
          <rightExpr
              xsi:type="dinkiemodel:Number"/>
        </expression>
        <elseStats
            xsi:type="dinkiemodel:Sync"
            varName="lock">
          <statements
              xsi:type="dinkiemodel:IfTwo">
            <thenStats
                xsi:type="dinkiemodel:StringArrayDecl"
                varName="str"
                content="Some elements are true\n"/>
            <thenStats
                xsi:type="dinkiemodel:WriteStatement">
              <type
                  xsi:type="dinkiemodel:ArrayType"
                  arrayType="CHAR"/>
              <expression
                  xsi:type="dinkiemodel:VariableExpr"
                  name="str"/>
            </thenStats>
            <expression
                xsi:type="dinkiemodel:FuncExpr"
                funcName="some_are_true">
              <arguments
                  xsi:type="dinkiemodel:VariableExpr"
                  name="bools"/>
            </expression>
            <elseStats
                xsi:type="dinkiemodel:StringArrayDecl"
                varName="str"
                content="No elements are true\n"/>
            <elseStats
                xsi:type="dinkiemodel:WriteStatement">
              <type
                  xsi:type="dinkiemodel:ArrayType"
                  arrayType="CHAR"/>
              <expression
                  xsi:type="dinkiemodel:VariableExpr"
                  name="str"/>
            </elseStats>
          </statements>
        </elseStats>
      </statements>
    </statements>
  </main>
</dinkiemodel:Program>
